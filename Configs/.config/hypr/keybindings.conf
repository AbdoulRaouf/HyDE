## █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
## █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█

# voir https://wiki.hyprland.org/configuring/keywords/ pour plus d'infos
# pour des exemples de raccourcis, voir https://wiki.hyprland.org/configuring/binds/

# Groupement des raccourcis pour une gestion plus facile
# $d=[Nom du Groupe|Sous-groupe1|Sous-groupe2|...]
# '$d' est une variable utilisée pour grouper les raccourcis (ou utiliser une autre variable)
# C'est uniquement à des fins d'organisation et n'est pas une variable définie par hyprland
# Ce que nous avons fait ici, c'est modifier la Description des raccourcis pour inclure le nom du groupe
# Le $d sera analysé comme une clé distincte à utiliser pour une interface graphique ou quelque chose de joli
# [Principal|Sous-groupe1|Sous-groupe2|...]
# Principal - Le nom du groupe principal
# Sous-groupe1.. - Les noms des sous-groupes peuvent être utilisés pour éviter de répéter la même description


#*  Variables 
# Défaut si commenté
# $mainMod = Super # touche super / meta / windows
# Assigner les applications
# $TERMINAL = kitty
# $EDITOR = code
# $EXPLORER = dolphin
# $BROWSER = firefox

$wm=Gestion des Fenêtres
$d=[$wm]
bindd = $mainMod, Q, $d fermer la fenêtre active, exec, $scrPath/dontkillsteam.sh
bindd = Alt, F4, $d fermer la fenêtre active, exec, $scrPath/dontkillsteam.sh
bindd = $mainMod, Delete, $d quitter la session hyprland, exit
bindd = $mainMod, W, $d basculer en mode flottant, togglefloating
bindd = $mainMod, G, $d basculer le groupe, togglegroup
bindd = $mainMod, F, $d basculer le plein écran, fullscreen
bindd = $mainMod, L, $d verrouiller l'écran, exec, lockscreen.sh
bindd = $mainMod Shift, F, $d épingler la fenêtre active, exec, $scrPath/windowpin.sh
bindd = Control Alt, Delete, $d menu de déconnexion, exec, $scrPath/logoutlaunch.sh
bindd = Alt_R, Control_R, $d basculer waybar et recharger la config, exec, hyde-shell waybar --hide
# bindd = ALT_R, Control_R,basculer waybar, exec, killall waybar || waybar # basculer waybar sans recharger, plus rapide

$d=[$wm|Navigation Groupe]
bindd = $mainMod Control, H, $d passer au groupe précédent, changegroupactive, b
bindd = $mainMod Control, L, $d passer au groupe suivant, changegroupactive, f

$d=[$wm|Changer le focus]
bindd = $mainMod, Left, $d focus à gauche, movefocus, l
bindd = $mainMod, Right, $d focus à droite, movefocus, r
bindd = $mainMod, Up, $d focus en haut, movefocus, u
bindd = $mainMod, Down , $d focus en bas, movefocus, d
bindd = ALT, Tab, $d cycler le focus, cyclenext

$d=[$wm|Redimensionner la Fenêtre Active]
# Redimensionner les fenêtres
bindde = $mainMod Shift, Right, $d redimensionner vers la droite, resizeactive, 30 0
bindde = $mainMod Shift, Left, $d redimensionner vers la gauche, resizeactive, -30 0
bindde = $mainMod Shift, Up, $d redimensionner vers le haut, resizeactive, 0 -30
bindde = $mainMod Shift, Down, $d redimensionner vers le bas, resizeactive, 0 30

# Déplacer la fenêtre active dans l'espace de travail avec mainMod + Maj + Ctrl [←→↑↓]
$d=[$wm|Déplacer la fenêtre active]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde = $mainMod Shift Control, left, Déplacer la fenêtre active vers la gauche, exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = $mainMod Shift Control, right, Déplacer la fenêtre active vers la droite, exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = $mainMod Shift Control, up, Déplacer la fenêtre active vers le haut, exec, $moveactivewindow 0 -30 || hyprctl dispatch movewindow u
bindde = $mainMod Shift Control, down, Déplacer la fenêtre active vers le bas, exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

# Déplacer/Redimensionner la fenêtre active
$d=[$wm|Déplacer & Redimensionner avec la souris]
binddm = $mainMod, mouse:272, $d maintenir pour déplacer la fenêtre, movewindow
binddm = $mainMod, mouse:273, $d maintenir pour redimensionner la fenêtre, resizewindow
binddm = $mainMod, Z, $d maintenir pour déplacer la fenêtre, movewindow
binddm = $mainMod, X, $d maintenir pour redimensionner la fenêtre, resizewindow

# Basculer la division de la fenêtre
$d=[$wm]
bindd = $mainMod, J, $d basculer la division, togglesplit

$l=Lanceurs
$d=[$l|Applications]
bindd = $mainMod, T, $d émulateur de terminal, exec, $TERMINAL
bindd = $mainMod Alt, T, $d terminal déroulant, exec, [float; move 20% 5%; size 60% 60%] $TERMINAL
bindd = $mainMod, E, $d explorateur de fichiers, exec, $EXPLORER
bindd = $mainMod, C, $d éditeur de texte, exec, $EDITOR
bindd = $mainMod, B, $d navigateur web, exec, $BROWSER
bindd = Control Shift, Escape, $d moniteur système, exec, $scrPath/sysmonlaunch.sh

$d=[$l|Menus Rofi]
$rofi-launch=$scrPath/rofilaunch.sh
bindd = $mainMod, A, $d lanceur d'applications, exec, pkill -x rofi || $rofi-launch d
bindd = $mainMod, TAB, $d sélecteur de fenêtres, exec, pkill -x rofi || $rofi-launch w
bindd = $mainMod Shift, E, $d chercheur de fichiers, exec, pkill -x rofi || $rofi-launch f
bindd = $mainMod, slash, $d aide-mémoire des raccourcis, exec, pkill -x rofi || $scrPath/keybinds_hint.sh c
bindd = $mainMod, comma, $d sélecteur d'emojis, exec, pkill -x rofi || $scrPath/emoji-picker.sh
bindd = $mainMod, period, $d sélecteur de glyphes, exec, pkill -x rofi || $scrPath/glyph-picker.sh
bindd = $mainMod, V, $d presse-papiers, exec, pkill -x rofi || $scrPath/cliphist.sh -c
bindd = $mainMod Shift, V, $d gestionnaire du presse-papiers, exec, pkill -x rofi || $scrPath/cliphist.sh
bindd = $mainMod Shift, A, $d sélectionner le lanceur rofi, exec, pkill -x rofi || $scrPath/rofiselect.sh


$hc=Contrôles Matériels
$d=[$hc|Audio]
binddl  = , F10, $d couper/activer le son, exec, $scrPath/volumecontrol.sh -o m
binddl  = , XF86AudioMute,$d couper/activer le son, exec, $scrPath/volumecontrol.sh -o m
binddel = , F11, $d baisser le volume, exec, $scrPath/volumecontrol.sh -o d
binddel = , F12, $d augmenter le volume, exec, $scrPath/volumecontrol.sh -o i
binddl  = , XF86AudioMicMute,$d couper/activer le micro, exec, $scrPath/volumecontrol.sh -i m
binddel = , XF86AudioLowerVolume, $d baisser le volume, exec, $scrPath/volumecontrol.sh -o d
binddel = , XF86AudioRaiseVolume, $d augmenter le volume, exec, $scrPath/volumecontrol.sh -o i

$d=[$hc|Média]
binddl  = , XF86AudioPlay,$d lecture/pause média, exec, playerctl play-pause
binddl  = , XF86AudioPause,$d lecture/pause média, exec, playerctl play-pause
binddl  = , XF86AudioNext,$d média suivant, exec, playerctl next
binddl  = , XF86AudioPrev,$d média précédent, exec, playerctl previous

$d=[$hc|Luminosité]
binddel = , XF86MonBrightnessUp, $d augmenter la luminosité, exec, $scrPath/brightnesscontrol.sh i
binddel = , XF86MonBrightnessDown, $d baisser la luminosité, exec, $scrPath/brightnesscontrol.sh d


$ut=Utilitaires
$d=[$ut]
binddl = $mainMod, K, $d changer la disposition du clavier, exec, $scrPath/keyboardswitch.sh
bindd = $mainMod Alt, G, $d mode jeu, exec, $scrPath/gamemode.sh
bindd = $mainMod Shift, G, $d ouvrir le lanceur de jeux, exec, $scrPath/gamelauncher.sh

$d=[$ut|Capture d'écran]
bindd = $mainMod Shift, P, $d sélecteur de couleurs, exec, hyprpicker -an
bindd = $mainMod, P, $d capturer une zone de l'écran, exec, $scrPath/screenshot.sh s
bindd = $mainMod Control, P, $d figer et capturer une zone, exec, $scrPath/screenshot.sh sf
binddl = $mainMod Alt, P, $d capturer l'écran actuel, exec, $scrPath/screenshot.sh m
binddl = , Print, $d capturer tous les écrans, exec, $scrPath/screenshot.sh p

# TODO Créer un menu rofi principal pour ces sélecteurs
$rice=Thèmes et Fonds d'écran
$d=[$rice]
bindd = $mainMod Alt, Right, $d fond d'écran global suivant, exec, $scrPath/wallpaper.sh -Gn
bindd = $mainMod Alt, Left, $d fond d'écran global précédent, exec, $scrPath/wallpaper.sh -Gp
bindd = $mainMod Shift, W, $d sélectionner un fond d'écran global, exec, pkill -x rofi || $scrPath/wallpaper.sh -SG
bindd = $mainMod Alt, Up, $d style de waybar suivant, exec, $scrPath/wbarconfgen.sh n
bindd = $mainMod Alt, Down, $d style de waybar précédent, exec, $scrPath/wbarconfgen.sh p
bindd = $mainMod Shift, R, $d sélecteur de mode wallbash, exec, pkill -x rofi || $scrPath/wallbashtoggle.sh -m
bindd = $mainMod Shift, T, $d sélectionner un thème, exec, pkill -x rofi || $scrPath/themeselect.sh
bindd = $mainMod+Shift, Y, $d sélectionner les animations, exec, pkill -x rofi || $scrPath/animations.sh --select
bindd = $mainMod+Shift, U, $d sélectionner le style de hyprlock, exec, pkill -x rofi || $scrPath/hyprlock.sh --select



$ws=Espaces de Travail
$d=[$ws|Navigation]
bindd = $mainMod, 1, $d naviguer vers l'espace de travail 1, workspace, 1
bindd = $mainMod, 2, $d naviguer vers l'espace de travail 2, workspace, 2
bindd = $mainMod, 3, $d naviguer vers l'espace de travail 3, workspace, 3
bindd = $mainMod, 4, $d naviguer vers l'espace de travail 4, workspace, 4
bindd = $mainMod, 5, $d naviguer vers l'espace de travail 5, workspace, 5
bindd = $mainMod, 6, $d naviguer vers l'espace de travail 6, workspace, 6
bindd = $mainMod, 7, $d naviguer vers l'espace de travail 7, workspace, 7
bindd = $mainMod, 8, $d naviguer vers l'espace de travail 8, workspace, 8
bindd = $mainMod, 9, $d naviguer vers l'espace de travail 9, workspace, 9
bindd = $mainMod, 0, $d naviguer vers l'espace de travail 10, workspace, 10

$d=[$ws|Navigation|Espace relatif]
bindd = $mainMod Control, Right, $d passer à l'espace de travail suivant, workspace, r+1
bindd = $mainMod Control, Left, $d passer à l'espace de travail précédent, workspace, r-1

$d=[$ws|Navigation]
bindd = $mainMod Control, Down, $d naviguer vers l'espace de travail vide, workspace, empty

# Déplacer la fenêtre active vers un espace de travail
$d=[$ws|Déplacer la fenêtre vers un espace de travail]
bindd = $mainMod Shift, 1, $d déplacer vers l'espace de travail 1, movetoworkspace, 1
bindd = $mainMod Shift, 2, $d déplacer vers l'espace de travail 2, movetoworkspace, 2
bindd = $mainMod Shift, 3, $d déplacer vers l'espace de travail 3, movetoworkspace, 3
bindd = $mainMod Shift, 4, $d déplacer vers l'espace de travail 4, movetoworkspace, 4
bindd = $mainMod Shift, 5, $d déplacer vers l'espace de travail 5, movetoworkspace, 5
bindd = $mainMod Shift, 6, $d déplacer vers l'espace de travail 6, movetoworkspace, 6
bindd = $mainMod Shift, 7, $d déplacer vers l'espace de travail 7, movetoworkspace, 7
bindd = $mainMod Shift, 8, $d déplacer vers l'espace de travail 8, movetoworkspace, 8
bindd = $mainMod Shift, 9, $d déplacer vers l'espace de travail 9, movetoworkspace, 9
bindd = $mainMod Shift, 0, $d déplacer vers l'espace de travail 10, movetoworkspace, 10

# Déplacer la fenêtre active vers un espace de travail relatif
$d=[$ws]
bindd = $mainMod Control+Alt, Right, $d déplacer vers l'espace de travail relatif suivant, movetoworkspace, r+1
bindd = $mainMod Control+Alt, Left, $d déplacer vers l'espace de travail relatif précédent, movetoworkspace, r-1


# Faire défiler les espaces de travail existants
$d=[$ws|Navigation]
bindd = $mainMod, mouse_down, $d espace de travail suivant, workspace, e+1
bindd = $mainMod, mouse_up, $d espace de travail précédent, workspace, e-1


# Déplacer/Basculer vers l'espace de travail spécial (scratchpad)
$d=[$ws|Navigation|Espace de travail spécial]
bindd = $mainMod Shift, S, $d déplacer vers le scratchpad, movetoworkspace, special
bindd = $mainMod Alt, S, $d déplacer vers le scratchpad (silencieux), movetoworkspacesilent, special
bindd = $mainMod, S, $d afficher/cacher le scratchpad, togglespecialworkspace

# Déplacer la fenêtre active vers un espace de travail silencieusement
$d=[$ws|Navigation|Déplacer la fenêtre silencieusement]
bindd = $mainMod Alt, 1, $d déplacer vers l'espace 1 (silencieux), movetoworkspacesilent, 1
bindd = $mainMod Alt, 2, $d déplacer vers l'espace 2 (silencieux), movetoworkspacesilent, 2
bindd = $mainMod Alt, 3, $d déplacer vers l'espace 3 (silencieux), movetoworkspacesilent, 3
bindd = $mainMod Alt, 4, $d déplacer vers l'espace 4 (silencieux), movetoworkspacesilent, 4
bindd = $mainMod Alt, 5, $d déplacer vers l'espace 5 (silencieux), movetoworkspacesilent, 5
bindd = $mainMod Alt, 6, $d déplacer vers l'espace 6 (silencieux), movetoworkspacesilent, 6
bindd = $mainMod Alt, 7, $d déplacer vers l'espace 7 (silencieux), movetoworkspacesilent, 7
bindd = $mainMod Alt, 8, $d déplacer vers l'espace 8 (silencieux), movetoworkspacesilent, 8
bindd = $mainMod Alt, 9, $d déplacer vers l'espace 9 (silencieux), movetoworkspacesilent, 9
bindd = $mainMod Alt, 0, $d déplacer vers l'espace 10 (silencieux), movetoworkspacesilent, 10



$d=#! unset the group name
